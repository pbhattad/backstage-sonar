app:
  title: Scaffolded Backstage App
  baseUrl: http://localhost:3000

organization:
  name: Healthedge

backend:
  baseUrl: http://localhost:7000
  listen:
    port: 7000
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # img-src: 
    #   # "'self'" and 'data' are from the backstage default but must be set since img-src is overriden
    #   - "'self'"
    #   - 'data:'
    #   # Allow your Jira instance for @roadiehq/backstage-plugin-jira
    #   - 'https://jira.healthedge.net'
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, POST, PUT, DELETE]
    credentials: true
  database:
    client: sqlite3
    connection: ':memory:'
  cache:
    store: memory
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

integrations:
  bitbucket:
    - host: bitbucket.org
      token: ${BITBUCKET_TOKEN}
      username: ${BITBUCKET_USERNAME}
      password: ${BITBUCKET_PASSWORD}
    ### Example for how to add your GitHub Enterprise instance using the API:
    # - host: ghe.example.net
    #   apiBaseUrl: https://ghe.example.net/api/v3
    #   token: ${GHE_TOKEN}

proxy:
  '/sonarqube':
    target: http://sonar:9000/api
    allowedMethods: ['GET']
    auth: '${SONARQUBE_TOKEN}:'
    # Environmental variable: SONARQUBE_TOKEN
    # Fetch the sonar-auth-token from https://sonarcloud.io/account/security/
  '/jira/api':
    target: https://jira.healthedge.net
    allowedMethods: ['GET']
    auth: '${JIRA_API_TOKEN}:'
    # headers:
    #   Authorization: ${JIRA_API_TOKEN}
    #   Accept: 'application/json'
    #   Content-Type: 'application/json'
    #   X-Atlassian-Token: 'no-check'
    #   # This is a workaround since Jira APIs reject browser origin requests. Any dummy string without whitespace works.
    #   User-Agent: "teststring"
  # '/jenkins/api':
  #   target: http://localhost:8080
  #   changeOrigin: true
  #   headers:
  #     Authorization: Basic ${JENKINS_BASIC_AUTH_HEADER}

sonarQube:
  baseUrl: http://sonar:9000

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  # see https://backstage.io/docs/auth/ to learn about auth providers
  providers: {}

scaffolder:
  github:
    token: ${GITHUB_TOKEN}
    visibility: public # or 'internal' or 'private'

catalog:
  rules:
    - allow: [Component, System, API, Group, User, Resource, Location]
  locations:
    - type: bitbucket-discovery
      target: https://bitbucket.org/pbhattad/dashboard-spike/src/master/catalog-info.yaml
    # Backstage example components
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-components.yaml

    # Backstage example systems
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-systems.yaml

    # Backstage example APIs
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-apis.yaml

    # Backstage example resources
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-resources.yaml

    # Backstage example organization groups
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme/org.yaml

    # Backstage example templates
    - type: url
      target: https://github.com/backstage/software-templates/blob/main/scaffolder-templates/react-ssr-template/template.yaml
      rules:
        - allow: [Template]
    - type: url
      target: https://github.com/backstage/software-templates/blob/main/scaffolder-templates/springboot-grpc-template/template.yaml
      rules:
        - allow: [Template]
    - type: url
      target: https://github.com/spotify/cookiecutter-golang/blob/master/template.yaml
      rules:
        - allow: [Template]
    - type: url
      target: https://github.com/backstage/software-templates/blob/main/scaffolder-templates/docs-template/template.yaml
      rules:
        - allow: [Template]
